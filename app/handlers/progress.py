from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from app.database import db_connect

router = Router()

@router.message(Command("check_progress"))
async def check_progress(message: Message):
    user_id = message.from_user.id
    db = await db_connect()  # ‚úÖ –ñ–¥—ë–º, –ø–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è

    async with db:  # ‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å async with
        async with db.execute("SELECT goal_calories FROM profiles WHERE user_id = ?", (user_id,)) as cursor:
            profile = await cursor.fetchone()

        async with db.execute("SELECT SUM(amount) FROM water_log WHERE user_id = ? AND date = CURRENT_DATE", (user_id,)) as cursor:
            water = await cursor.fetchone()

        async with db.execute("SELECT SUM(calories) FROM food_log WHERE user_id = ? AND date = CURRENT_DATE", (user_id,)) as cursor:
            food = await cursor.fetchone()

        async with db.execute("SELECT SUM(calories_burned) FROM workout_log WHERE user_id = ? AND date = CURRENT_DATE", (user_id,)) as cursor:
            workouts = await cursor.fetchone()

    goal_calories = profile[0] if profile else 2000
    consumed_water = water[0] if water and water[0] else 0
    consumed_calories = food[0] if food and food[0] else 0
    burned_calories = workouts[0] if workouts and workouts[0] else 0
    net_calories = consumed_calories - burned_calories
    remaining_water = max(0, 2400 - consumed_water)

    await message.reply(
        f"üìä *–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*\n"
        f"üíß –í–æ–¥–∞: {consumed_water} –º–ª / 2400 –º–ª (–æ—Å—Ç–∞–ª–æ—Å—å {remaining_water} –º–ª)\n"
        f"üî• –ö–∞–ª–æ—Ä–∏–∏: {net_calories} –∫–∫–∞–ª / {goal_calories} –∫–∫–∞–ª"
    )

def register_progress_handlers(dp):
    dp.include_router(router)
